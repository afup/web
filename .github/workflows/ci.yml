name: CI

on: [ push, pull_request ]

env:
  php_version: '8.2'

jobs:

  unit:
    name: "Unit tests"
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP with tools
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php_version }}

      - uses: ramsey/composer-install@v3
        with:
          composer-options: "--no-scripts"

      - name: Tests - Unit
        run: ./bin/phpunit --testsuite unit

  lint:
    name: "Linter"
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP with tools
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php_version }}

      - uses: ramsey/composer-install@v3
        with:
          composer-options: "--no-scripts"

      - name: Tests - CS Fixer
        run: ./bin/php-cs-fixer fix --dry-run -vv

  phpstan:
    name: "PHPStan"
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP with tools
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php_version }}

      - uses: ramsey/composer-install@v3
        with:
          composer-options: "--no-scripts"

      - name: PHPStan
        run: ./bin/phpstan --memory-limit=-1

  functional:
    name: "Functional tests"
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Cache Docker images.
        uses: AndreKurait/docker-cache@0.6.0
        with:
          key: |
            docker-${{ runner.os }}-${{ hashFiles(
              'compose.yml',
              'docker/apachephp/Dockerfile',
              'docker/mysql/dev/Dockerfile',
              'docker/mysql/test/Dockerfile'
            ) }}

      - name: Tests - Functional
        run: |
          make init-file
          make init-folder
          docker compose up -d
          docker compose exec --user localUser apachephp composer install --no-scripts
          docker compose run --rm node bash -c "npm install --legacy-peer-deps && npm run build"
          cat ./.docker/mysql/reset-db.sql | docker compose run -T --rm db /opt/mysql_no_db
          docker compose exec --user localUser apachephptest php bin/phinx migrate
          docker compose exec --user localUser apachephptest php bin/phinx seed:run
          docker compose exec --user localUser apachephptest ./bin/behat
          cat var/logs/test.deprecations.log | cut -d "]" -f 2 | awk '{$$1=$$1};1' | sort | uniq -c | sort -nr > var/logs/test.deprecations_grouped.log

      - uses: actions/upload-artifact@v4
        with:
          name: Functional tests - deprecated log - full
          path: var/logs/test.deprecations.log

      - uses: actions/upload-artifact@v4
        with:
          name: Functional tests - deprecated log - report
          path: var/logs/test.deprecations_grouped.log

  integration:
    name: "Integration tests"
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Cache Docker images.
        uses: AndreKurait/docker-cache@0.6.0
        with:
          key: |
            docker-${{ runner.os }}-${{ hashFiles(
              'compose.yml',
              'docker/apachephp/Dockerfile',
              'docker/mysql/dev/Dockerfile',
              'docker/mysql/test/Dockerfile'
            ) }}

      - name: Tests - Integration
        run: |
          make init-file
          make test-integration-ci

  rector:
    name: "Rector"
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP with tools
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php_version }}

      - uses: ramsey/composer-install@v3
        with:
          composer-options: "--no-scripts"

      - name: Rector
        run: ./bin/rector --dry-run
