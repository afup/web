# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
    twitter_api_settings:
        oauth_access_token: "%twitter_oauth_access_token%"
        oauth_access_token_secret: "%twitter_oauth_access_token_secret%"
        consumer_key: "%twitter_consumer_key%"
        consumer_secret: "%twitter_consumer_secret%"

services:
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]
    _defaults:
        public: true

    my_github_authenticator:
        class: AppBundle\Security\MyGithubAuthenticator
        autowire: true

    github_user_repository: '@AppBundle\Event\Model\Repository\GithubUserRepository'

    AppBundle\Event\Model\Repository\GithubUserRepository:
        class: AppBundle\Event\Model\Repository\GithubUserRepository
        factory: ["@ting", get]
        arguments: [AppBundle\Event\Model\Repository\GithubUserRepository]

    app_twig:
        class: AppBundle\Twig\TwigExtension
        arguments: ["@app.legacy_router", "@app.html_to_markdown", "@app.html_to_markdown_email", "@service_container"]
        tags:
            -  { name: twig.extension }

    app_twig_assets:
        class: AppBundle\Twig\AssetsExtension
        arguments: ["%kernel.root_dir%"]
        tags:
            -  { name: twig.extension }

    app_twig_offices:
        class: AppBundle\Twig\OfficesExtension
        tags:
            -  { name: twig.extension }

    app.locale_listener:
        class: AppBundle\Listener\LocaleListener
        arguments: [ "%kernel.default_locale%" ]
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 100 }

    app.legacy_listener:
        class: AppBundle\Listener\LegacySiteListener
        tags:
            - { name: kernel.event_listener, event: kernel.controller, priority: 100 }

    app.speaker_repository: '@AppBundle\Event\Model\Repository\SpeakerRepository'

    AppBundle\Event\Model\Repository\SpeakerRepository:
        class: AppBundle\Event\Model\Repository\SpeakerRepository
        factory: ["@ting", get]
        arguments: [AppBundle\Event\Model\Repository\SpeakerRepository]

    app.speaker_factory:
        class: AppBundle\CFP\SpeakerFactory
        arguments: ["@security.token_storage", "@app.speaker_repository"]

    app.talk_voter:
        class: AppBundle\Security\TalkVoter
        arguments: ["@app.speaker_repository"]
        tags:
          - { name: security.voter }
        public: false

    AppBundle\CFP\PhotoStorage:
        arguments: ["%kernel.root_dir%/../htdocs/uploads/speakers", "/uploads/speakers"]

    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }

    app.user_repository: '@AppBundle\Association\Model\Repository\UserRepository'

    AppBundle\Association\Model\Repository\UserRepository:
        class: AppBundle\Association\Model\Repository\UserRepository
        factory: ["@ting", get]
        arguments: [AppBundle\Association\Model\Repository\UserRepository]

    AppBundle\Event\Model\Repository\TalkRepository:
        class: AppBundle\Event\Model\Repository\TalkRepository
        factory: ["@ting", get]
        arguments: [AppBundle\Event\Model\Repository\TalkRepository]

    app.company_member_repository:
        class: AppBundle\Association\Model\Repository\CompanyMemberRepository
        factory: ["@ting", get]
        arguments: [AppBundle\Association\Model\Repository\CompanyMemberRepository]

    app.legacy_authenticator:
        class: AppBundle\Security\LegacyAuthenticator
        autowire: true

    app.legacy_hash_authenticator:
        class: AppBundle\Security\LegacyHashAuthenticator
        autowire: true

    app.unique_validator:
        class: AppBundle\Validator\Constraints\UniqueEntityValidator
        autowire: true
        tags:
            - { name: validator.constraint_validator }

    AppBundle\LegacyModelFactory:
        autowire: true


    app.company_subscription:
        class: AppBundle\Association\CompanyMembership\SubscriptionManagement
        autowire: true

    AppBundle\Payment\PayboxFactory:
        autowire: true

    app.slack_message_factory:
        class: AppBundle\Slack\MessageFactory
        autowire: true

    app.slack_notifier:
        class: AppBundle\Notifier\SlackNotifier
        arguments: ["%slack_url%", "@app.slack_message_factory", "@jms_serializer.serializer"]

    app.legacy_router:
        class: AppBundle\Routing\LegacyRouter
    app.algolia_client:
        class: AlgoliaSearch\Client
        arguments: ["%algolia_app_id%", "%algolia_backend_api_key%"]

    app.joindin.comments:
        class: AppBundle\Joindin\JoindinComments
        arguments: ["@cache.system"]

    app.twitter_api:
        class: TwitterAPIExchange
        arguments: ["%twitter_api_settings%"]

    app.mailchimp_client:
        class: Mailchimp\Mailchimp
        arguments: ["%mailchimp_api_key%"]
        public: false

    app.mailchimp_api:
        class: AppBundle\Mailchimp\Mailchimp
        arguments: ["@app.mailchimp_client"]

    app.mailchimp_techletter_client:
        class: Mailchimp\Mailchimp
        arguments: ["%mailchimp_techletter_api_key%"]
        public: false

    app.mailchimp_techletter_api:
        class: AppBundle\Mailchimp\Mailchimp
        arguments: ["@app.mailchimp_techletter_client"]

    app.techletter_mailchimp_synchronizer:
        class: AppBundle\TechLetter\MailchimpSynchronizer
        arguments: ["@app.mailchimp_techletter_api", "@app.techletter_subscriptions_repository", "%mailchimp_techletter_list%"]

    app.mail:
        class: Afup\Site\Utils\Mail
        arguments:
            $logger: "@logger"

    app.emails:
        class: AppBundle\Email\Emails
        arguments: ["@twig", "@app.mail"]

    app.invitation_mail:
        class: AppBundle\Association\CompanyMembership\InvitationMail
        autowire: true

    app.user_company:
        class: AppBundle\Association\CompanyMembership\UserCompany
        autowire: true

    app.mailchimp_event_listener:
        class: AppBundle\Mailchimp\EventListener
        arguments: ["@app.mailchimp_api", "%mailchimp_members_list%"]
        tags:
          - { name: kernel.event_listener, event: user.disabled, method: onUserDisabled }

    app.collection_filter:
        class: AppBundle\Model\CollectionFilter

    AppBundle\Security\ActionThrottling\LogRepository:
        class: AppBundle\Security\ActionThrottling\LogRepository
        factory: ["@ting", get]
        arguments: [AppBundle\Security\ActionThrottling\LogRepository]

    AppBundle\Event\Model\Repository\InvoiceRepository:
        class: AppBundle\Event\Model\Repository\InvoiceRepository
        factory: ["@ting", get]
        arguments: [AppBundle\Event\Model\Repository\InvoiceRepository]

    app.techletter_subscriptions_repository:
        class: AppBundle\Association\Model\Repository\TechletterSubscriptionsRepository
        factory: ["@ting", get]
        arguments: [AppBundle\Association\Model\Repository\TechletterSubscriptionsRepository]

    app.action_throttling:
        class: AppBundle\Security\ActionThrottling\ActionThrottling
        autowire: true

    AppBundle\Event\Model\TicketFactory:
        autowire: true

    AppBundle\Event\Model\InvoiceFactory:
        autowire: true

    AppBundle\Event\Model\Repository\EventRepository:
        class: AppBundle\Event\Model\Repository\EventRepository
        factory: ["@ting", get]
        arguments: [AppBundle\Event\Model\Repository\EventRepository]

    AppBundle\Event\Model\Repository\SponsorTicketRepository:
        class: AppBundle\Event\Model\Repository\SponsorTicketRepository
        factory: ["@ting", get]
        arguments: [AppBundle\Event\Model\Repository\SponsorTicketRepository]

    AppBundle\Event\Model\Repository\TicketRepository:
        class: AppBundle\Event\Model\Repository\TicketRepository
        factory: ["@ting", get]
        arguments: [AppBundle\Event\Model\Repository\TicketRepository]

    AppBundle\Event\Model\Repository\TicketTypeRepository:
        class: AppBundle\Event\Model\Repository\TicketTypeRepository
        factory: ["@ting", get]
        arguments: [AppBundle\Event\Model\Repository\TicketTypeRepository]

    AppBundle\Event\Model\Repository\TicketEventTypeRepository:
        class: AppBundle\Event\Model\Repository\TicketEventTypeRepository
        factory: ["@ting", get]
        arguments: [AppBundle\Event\Model\Repository\TicketEventTypeRepository]

    AppBundle\Event\Model\Repository\TicketSpecialPriceRepository:
        class: AppBundle\Event\Model\Repository\TicketSpecialPriceRepository
        factory: ["@ting", get]
        arguments: [AppBundle\Event\Model\Repository\TicketSpecialPriceRepository]

    AppBundle\Groups\Model\Repository\MailingListRepository:
        class: AppBundle\Groups\Model\Repository\MailingListRepository
        factory: ["@ting", get]
        arguments: [AppBundle\Groups\Model\Repository\MailingListRepository]

    AppBundle\Site\Model\Repository\ArticleRepository:
        class: AppBundle\Site\Model\Repository\ArticleRepository
        factory: ["@ting", get]
        arguments: [AppBundle\Site\Model\Repository\ArticleRepository]

    AppBundle\TechLetter\Model\Repository\SendingRepository:
        class: AppBundle\TechLetter\Model\Repository\SendingRepository
        factory: ["@ting", get]
        arguments: [AppBundle\TechLetter\Model\Repository\SendingRepository]

    AppBundle\Event\Ticket\SponsorTicketHelper:
        autowire: true

    AppBundle\Event\Ticket\SponsorTokenMail:
        autowire: true

    AppBundle\Event\Ticket\TicketTypeAvailability:
        autowire: true

    app.ticket_form:
        class: AppBundle\Event\Form\TicketType
        autowire: true
        tags:
          - {name: form.type}

    app.news_filters:
        class: AppBundle\Site\Form\NewsFiltersType
        autowire: true
        tags:
          - {name: form.type}

    Afup\Site\Utils\Pays:
        class: Afup\Site\Utils\Pays
        factory: ['@AppBundle\LegacyModelFactory', 'createObject']
        arguments:
          - 'Afup\Site\Utils\Pays'

    Afup\Site\Forum\Inscriptions:
        class: Afup\Site\Forum\Inscriptions
        factory: ['@AppBundle\LegacyModelFactory', 'createObject']
        arguments:
          - 'Afup\Site\Forum\Inscriptions'

    Afup\Site\Association\Cotisations:
        class: Afup\Site\Association\Cotisations
        factory: ['@AppBundle\LegacyModelFactory', 'createObject']
        arguments:
          - 'Afup\Site\Association\Cotisations'

    AppBundle\Event\Form\PurchaseType:
        autowire: true
        tags:
          - {name: form.type}

    AppBundle\Event\Validator\Constraints\LoggedInMemberValidator:
        autowire: true
        tags:
          - { name: validator.constraint_validator }

    AppBundle\Event\Validator\Constraints\PublicTicketValidator:
        autowire: true
        tags:
          - { name: validator.constraint_validator }

    AppBundle\Event\Validator\Constraints\CorporateMemberValidator:
        autowire: true
        tags:
          - { name: validator.constraint_validator }

    AppBundle\Event\Validator\Constraints\AvailableTicketValidator:
        autowire: true
        tags:
          - { name: validator.constraint_validator }

    app.event_ticket.purchase_type_factory:
        class: AppBundle\Event\Ticket\PurchaseTypeFactory
        autowire: true

    app.sponsorship_lead_mailer:
        class: AppBundle\Event\Sponsorship\SponsorshipLeadMail
        arguments: ["@app.mail", "@translator", "@logger", "%kernel.root_dir%/../htdocs/docs/"]

    app.trello_client:
        class: Trello\Client
        calls: [["authenticate", ["%trello_api_key%", "%trello_token%", !php/const:Trello\Client::AUTH_URL_CLIENT_ID]]]

    Trello\Manager:
        arguments: ["@app.trello_client"]

    app.lead_repository:
        class: AppBundle\Event\Model\Repository\LeadRepository
        arguments:
            $logger: "@logger"
        autowire: true

    app.event_anonymous_export:
        class: AppBundle\Event\AnonymousExport
        autowire: true

    app.html_to_markdown:
        class: Parsedown
        autowire: true

    app.html_to_markdown_email:
        class: AppBundle\Email\Parsedown

    app.event_json_ld:
        class: AppBundle\Event\JsonLd
        autowire: true

    app.google_client:
        class: Google_Client
        calls:
          - ["setAuthConfig", ["%google_groups_api_key%"]]
          - ["setScopes", [[!php/const:Google_Service_Directory::ADMIN_DIRECTORY_GROUP, !php/const:Google_Service_Directory::ADMIN_DIRECTORY_GROUP_READONLY]]]
          - ["setSubject", ['admin-mailing-listes-api@afup.org']]

    Google_Service_Directory:
        class: Google_Service_Directory
        arguments: ["@app.google_client"]

    AppBundle\Groups\GroupRepository:
        autowire: true

    app.members_groups_listener:
        class: AppBundle\Association\Listener\MembersGroupsListener
        arguments:
            $logger: "@logger"
        autowire: true
        tags:
          - { name: kernel.event_listener, event: member.new, method: onNewMemberEvent }

    app.offices_finder:
        class: AppBundle\Offices\OfficeFinder
        arguments: ["@app.geocoder"]

    app.geocoder:
        class: Geocoder\Provider\GoogleMaps
        arguments: ["@app.geocoder.adapter", null, null, true, "%google_maps_api_key%"]

    app.geocoder.adapter:
        class: Ivory\HttpAdapter\CurlHttpAdapter
        public: false

    app.registration_export_generator:
        class : AppBundle\Event\Ticket\RegistrationsExportGenerator
        arguments: ["@app.offices_finder", '@Afup\Site\Association\Cotisations', '@AppBundle\Event\Model\Repository\TicketRepository', '@AppBundle\Event\Model\Repository\InvoiceRepository', "@app.user_repository"]

    app.talk_export_generator:
        class : AppBundle\Event\Talk\ExportGenerator
        arguments: ['@AppBundle\Event\Model\Repository\TalkRepository']

    app.speaker_export_generator:
        class : AppBundle\Event\Speaker\ExportGenerator
        arguments: ['@AppBundle\Event\Model\Repository\TalkRepository']

    app.hotel_reservation_type:
        class: AppBundle\SpeakerInfos\Form\HotelReservationType
        arguments: ["@translator"]
        tags:
          - {name: form.type}

    app.sitemap.talks:
        class: AppBundle\Subscriber\TalksSitemapSubscriber
        arguments:
            - "@router"
            - "@ting"
        tags:
            - { name: "kernel.event_subscriber", priority: 100 }