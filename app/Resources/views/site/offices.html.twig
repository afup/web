{% extends ':site:base.html.twig' %}

{% block title %}Les antennes de l'AFUP{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/grid.css') }}" media="all" />
    <link rel="stylesheet" href="{{ asset('css/buttons.css') }}" media="all" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <style type="text/css">

        .mapael .map {
            margin-bottom: 10px;
            position: relative;
        }

        .map-container a {
            text-decoration: none;
        }

        .map-container img {
            max-width: 100%;
        }

        .city-link {
            line-height: 1.909em;
            font-size: 1.46em;
        }
    </style>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-mousewheel/3.1.13/jquery.mousewheel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.0/raphael-min.js"></script>
    <script src="{{ asset('/js/jQuery-Mapael-2.0.0/js/jquery.mapael.min.js') }}"></script>
    <script src="{{ asset('/js/jQuery-Mapael-2.0.0/js/maps/france_and_luxembourg.min.js') }}"></script>


    <script>
        var legends = {};
        var plots = {};
        var baseArea = {
            attrs: {
                fill: "#2b3e74"
            },
            attrsHover: {
                fill: "#2b3e74"
            }
        };
        var areas = {};

        $('.afup-office').each(function() {
            var city = $(this);
            var href = $('a', city).first().attr('href');

            legends[city.data('mapKey')] = {
                first_point_x: city.data("map-legend-first-point-x"),
                first_point_y: city.data("map-legend-first-point-y"),
                second_point_x: city.data("map-legend-second-point-x"),
                second_point_y: city.data("map-legend-second-point-y"),
                third_point_x: city.data("map-legend-third-point-x"),
                third_point_y: city.data("map-legend-third-point-y"),
                second_city_first_point_x: city.data("map-legend-second-city-first-point-x"),
                second_city_first_point_y: city.data("map-legend-second-city-first-point-y"),
                second_city_second_point_x: city.data("map-legend-second-city-second-point-x"),
                second_city_second_point_y: city.data("map-legend-second-city-second-point-y"),
                second_city_third_point_x: city.data("map-legend-second-city-third-point-x"),
                second_city_third_point_y: city.data("map-legend-second-city-third-point-y"),
                attachment: city.data("map-legend-attachment"),
                title: $('h3', city).text(),
                subtitle: city.data("map-legend-subtitle"),
                link: href,
                logo_url: $('img', city).attr('src')
            };
            plots[city.data('mapKey')] = {
                latitude: city.data("map-point-latitude"),
                longitude: city.data("map-point-longitude"),
                size: 20,
                attrs: {
                    fill: "#2b3e74"
                }
            };

            if ('undefined' !== typeof city.data("map-second-city-point-latitude")
                && 'undefined' !== typeof city.data("map-second-city-point-longitude")
            ) {
                plots[city.data('mapKey') + '-second-city'] = {
                    latitude: city.data("map-second-city-point-latitude"),
                    longitude: city.data("map-second-city-point-longitude"),
                    size: 20,
                    attrs: {
                        fill: "#2b3e74"
                    }
                };
            }

            if (typeof city.data('departements') != 'undefined') {
                $.each(city.data('departements').toString().split(','), function(index, departementCode) {
                    var area = jQuery.extend({}, baseArea);
                    area["href"] = href;
                    areas["department-" + departementCode] = area;
                });
            }
            if (typeof city.data('pays') != 'undefined') {
                $.each(city.data('pays').toString().split(','), function(index, paysCode) {
                    var area = jQuery.extend({}, baseArea);
                    area["href"] = href;
                    areas["country-" + paysCode] = area;
                });
            }

        });

        $(".map-container").mapael({
            map : {
                name : "france_departments",
                defaultArea: {
                    animDuration: 0,
                    attrs: {
                        fill: "#50a0dd",
                        stroke: "#ced8d0"
                    },
                    attrsHover: {
                        fill: "#50a0dd"
                    },
                    text: {
                        attrs: {
                            fill: "#505444"
                        },
                        attrsHover: {
                            fill: "#000"
                        }
                    }
                },
                afterInit : function($self, paper, areas, plots, options) {
                    var topMargin = 30;
                    var bottomMargin = 170;
                    var leftMargin = 170;
                    var rightMargin = 100;

                    var addedWidth = leftMargin + rightMargin;
                    var addedHeight = topMargin + bottomMargin;

                    paper.setViewBox(0, 0, 600 + addedWidth, 500 + addedHeight, true);

                    // DÃ©calages de la carte
                    for (var key in areas) {
                        areas[key].mapElem.translate(addedWidth / 2, topMargin);
                    }

                    for (var key in plots) {
                        plots[key].mapElem.translate(addedWidth / 2, topMargin);
                    }

                    for (var key in legends) {
                        paper.path([
                            "M",
                            legends[key]['first_point_x'],
                            legends[key]['first_point_y'],
                            "L",
                            legends[key]['second_point_x'],
                            legends[key]['second_point_y']
                        ]).attr({stroke: "#000"});
                        paper.path([
                            "M",
                            legends[key]['second_point_x'],
                            legends[key]['second_point_y'],
                            "L",
                            legends[key]['third_point_x'],
                            legends[key]['third_point_y']
                        ]).attr({stroke: "#000"});

                        if ('undefined' !== typeof legends[key]['second_city_first_point_x']
                            && 'undefined' !== typeof legends[key]['second_city_first_point_y']
                            && 'undefined' !== typeof legends[key]['second_city_second_point_x']
                            && 'undefined' !== typeof legends[key]['second_city_second_point_y']
                            && 'undefined' !== typeof legends[key]['second_city_third_point_x']
                            && 'undefined' !== typeof legends[key]['second_city_third_point_y']
                        ) {
                            paper.path([
                                "M",
                                legends[key]['second_city_first_point_x'],
                                legends[key]['second_city_first_point_y'],
                                "L",
                                legends[key]['second_city_second_point_x'],
                                legends[key]['second_city_second_point_y']
                            ]).attr({stroke: "#000"});
                            paper.path([
                                "M",
                                legends[key]['second_city_second_point_x'],
                                legends[key]['second_city_second_point_y'],
                                "L",
                                legends[key]['second_city_third_point_x'],
                                legends[key]['second_city_third_point_y']
                            ]).attr({stroke: "#000"});
                        }

                        var boxWith = 150;
                        var boxHeight = 50;

                        var imageHeight = 50;
                        var imageWidth = 45;
                        var imageMargin = 4;

                        var textMaginWithImage = 8;
                        var textCentering = 23;

                        var imagePosition = {};
                        var linePoint1 = {};
                        var linePoint2 = {};
                        var textPosition = {};
                        var textAnchor;

                        if (legends[key]['attachment'] == 'left') {
                            linePoint1.x = legends[key]['third_point_x'];
                            linePoint1.y = legends[key]['third_point_y'] - (boxHeight / 2);
                            linePoint2.x = linePoint1.x;
                            linePoint2.y = linePoint1.y + boxHeight;
                            imagePosition = {
                                x: linePoint1.x + imageMargin,
                                y: linePoint1.y
                            };
                            textPosition = {
                                x: imagePosition.x + imageWidth + textMaginWithImage,
                                y: imagePosition.y + textCentering
                            };
                            textAnchor = 'start';
                        } else if (legends[key]['attachment'] == 'top') {
                            linePoint1.x = legends[key]['third_point_x'] - (boxWith / 2);
                            linePoint1.y = legends[key]['third_point_y'];
                            linePoint2.x = linePoint1.x + boxWith;
                            linePoint2.y = linePoint1.y;
                            imagePosition = {
                                x: linePoint1.x,
                                y: linePoint1.y + imageMargin
                            };
                            textPosition = {
                                x: imagePosition.x + imageWidth + textMaginWithImage,
                                y: imagePosition.y + textCentering
                            };
                            textAnchor = 'start';
                        } else if (legends[key]['attachment'] == 'bottom') {
                            linePoint1.x = legends[key]['third_point_x'] - (boxWith / 2);
                            linePoint1.y = legends[key]['third_point_y'] - boxHeight + boxHeight;
                            linePoint2.x = linePoint1.x + boxWith;
                            linePoint2.y = linePoint1.y;

                            imagePosition = {
                                x: linePoint1.x,
                                y: linePoint1.y - imageHeight - imageMargin
                            };
                            textPosition = {
                                x: imagePosition.x + imageWidth + textMaginWithImage,
                                y: imagePosition.y + textCentering
                            };
                            textAnchor = 'start';
                        } else if (legends[key]['attachment'] == 'right') {
                            linePoint1.x = legends[key]['third_point_x'] - (boxWith) + boxWith;
                            linePoint1.y = legends[key]['third_point_y'] - (boxHeight / 2);
                            linePoint2.x = linePoint1.x;
                            linePoint2.y = linePoint1.y + boxHeight;

                            imagePosition = {
                                x: linePoint1.x - imageMargin - imageWidth,
                                y: linePoint1.y
                            };
                            textPosition = {
                                x: imagePosition.x - textMaginWithImage,
                                y: imagePosition.y + textCentering
                            };
                            textAnchor = 'end';
                        }

                        paper.image(legends[key]['logo_url'], imagePosition.x, imagePosition.y, imageWidth, imageHeight);
                        var text = paper.text(textPosition.x, textPosition.y, legends[key]['title']).attr( {'text-anchor': textAnchor, 'font-size': "14px", "font-weight": "bold"} );
                        text.attr({'href': legends[key]['link']});

                    }
                }
            },
            plots: plots,
            areas: areas
        });
    </script>

{% endblock %}


{% block content %}
{{ render(controller(
    'AppBundle\\Controller\\Website\\SecondaryMenuController::display',
    { 'feuille_id': constant('Afup\\Site\\Corporate\\Feuille::ID_FEUILLE_ANTENNES') }
)) }}
<div class="mw1400p center" id="container">
<div class="line" id="main">
    <h1>Les antennes</h1>

    <p>Une quinzaine d'antennes locales, reprÃ©sentantes de l'AFUP en rÃ©gion, organise rencontres, meetups et apÃ©ros PHP
        tout au long de l'annÃ©e, tisse des liens au sein de la communautÃ©  de dÃ©veloppeuses et de dÃ©veloppeurs et fait la promotion du PHP dans les entreprises partout en France.</p>

    <div class="map-container">
        <div class="map">Carte de France des antennes de l'AFUP.</div>
    </div>

    <h2>ConcrÃ¨tement que se passe-t-il prÃ¨s de chez moi ?</h2>
    <h3>Meetups et apÃ©ros PHP</h3>
    <p>L'antenne locale, avec le soutien de l'AFUP, organise des meetups, soirÃ©es de confÃ©rences gratuites, accueillies dans des
        locaux d'entreprises partenaires. L'audience est conviÃ©e Ã  assister Ã  un ou deux talks proposÃ©s par des experts du langage, qu'ils soient speakers confirmÃ©s ou nouveaux confÃ©renciers qui se lancent en notre compagnie. <strong>Ces soirÃ©es sont l'occasion parfaite pour les auditeurs de progresser et se tenir informÃ©s des derniÃ¨res Ã©volutions de PHP. </strong></p>
    <p>Les apÃ©ros PHP, organisÃ©s dans un bar autour de quelques verres, permettent Ã©galement Ã  la communautÃ© de se retrouver.</p>
    <p>Enfin, les Ã©quipes en charge des antennes sont pleines de ressources et dâimagination, et proposent dâautres formats tout au long de lâannÃ©e : hackathons, forum ouverts, tables rondes...</p>
    <h3>CrÃ©er du lien avec les entreprises, les Ã©coles et les autres associations web</h3>
    <p>L'antenne locale est l'interlocuteur de prÃ©dilection en rÃ©gion pour crÃ©er des passerelles avec les Ã©coles, les
        entreprises PHP et les autres associations web locales. <strong>GrÃ¢ce Ã  l'antenne locale, la communautÃ© se rencontre, se fÃ©dÃ¨re, et des ponts se crÃ©ent avec tous les intervenants importants du monde Open Source</strong>.</p>
    <h3>Participation Ã  lâAFUP Day</h3>
    <p>LâAFUP Day est le grand Ã©vÃ¨nement printanier de lâAFUP : une journÃ©e de confÃ©rences mono-track organisÃ©e le mÃªme jour simultanÃ©ment dans plusieurs antennes AFUP. Quand l'Ã©quipe est dynamique et motivÃ©e, et que la communautÃ© locale suit, elle peut dÃ¨s lors soumettre sa candidature pour accueillir l'Ã©vÃ¨nement dans sa ville lâannÃ©e suivante.</p>
    <h2>Envie de vous impliquer ?</h2>
    <p>Chaque antenne locale est reprÃ©sentÃ©e par une Ã©quipe, Ã©lue par la communautÃ© locale lors des Ã©lections annuelles de juin. Si elle est l'interlocuteur privilÃ©giÃ© de l'AFUP pour votre rÃ©gion, elle a cependant besoin de connaÃ®tre les envies, les besoins de son audience, pour
        organiser des meetups qui l'intÃ©resseront : pensez Ã  contacter votre antenne pour lui soumettre vos idÃ©es.
    <p>LâÃ©quipe a peut-Ãªtre Ã©galement besoin de soutien : nâhÃ©sitez pas Ã  lui proposer votre aide. Si les Ã©lections annuelles permettent dâintÃ©grer officiellement une Ã©quipe, il est cependant possible de vous manifester auprÃ¨s dâelle Ã  tout moment de lâannÃ©e.</p>
    <p><strong>Envie de vous impliquer autrement ?</strong> Votre entreprise peut peut-Ãªtre accueillir un
        meetup dans ses locaux, sponsoriser un apÃ©ro PHP, ou vous pouvez peut-Ãªtre faire jouer vos contacts pour
        inviter un confÃ©rencier de qualitÃ© !</p>

    <h2>Trouvez l'antenne locale AFUP proche de chez vous !</h2>
    <p>Suivez-la sur <a href="https://twitter.com/afup/lists/antennes-afup/members?lang=fr">Twitter</a>,
        contactez-la en MP, ou Ã©crivez Ã  l'AFUP pour Ãªtre mis en relation avec l'Ã©quipe en charge de votre antenne.</p>

    <h2>Petite histoire des antennes locales</h2>
    <p>L'AFUP a Ã©tÃ© crÃ©Ã©e en 2001, avec pour objectif de promouvoir le langage PHP et son ecosystÃ¨me, et contribuer Ã 
        son dÃ©veloppement auprÃ¨s des professionnels et de la communautÃ©. En 2011, des membres de l'association vivant en
        rÃ©gion dÃ©cident de donner une nouvelle impulsion Ã  l'AFUP, et une nouvelle dimension Ã  ses objectifs : la
        communautÃ© manifeste son envie d'agir localement. C'est ainsi qu'apparaissent les antennes AFUP locales. Elles
        deviennent les reprÃ©sentantes en rÃ©gion de l'action menÃ©e Ã  l'Ã©chelle nationale par l'association. Rapidement,
        les antennes AFUP Lyon, Paris, OrlÃ©ans et Nantes naissent. Suivront Lille, Luxembourg, Toulouse, Montpellier, Bordeaux, Poitiers, Limogesâ¦ <strong>Rencontrez les membres AFUP qui vivent prÃ¨s de chez vous !</strong></p>


    <h2>Liste des antennes</h2>
    <div class="super-apero-officies">
        <div class="container">
        {% for antenne in antennes %}
            <div class="col-md-6 afup-office"
                data-map-key="{{ antenne.code }}"
                 {% if antenne.map is defined %}
                    data-map-legend-first-point-x="{{ antenne.map.firstCity.firstPoint.x }}"
                    data-map-legend-first-point-y="{{ antenne.map.firstCity.firstPoint.y }}"
                    data-map-legend-second-point-x="{{ antenne.map.firstCity.secondPoint.x }}"
                    data-map-legend-second-point-y="{{ antenne.map.firstCity.secondPoint.y }}"
                    data-map-legend-third-point-x="{{ antenne.map.firstCity.thirdPoint.x }}"
                    data-map-legend-third-point-y="{{ antenne.map.firstCity.thirdPoint.y }}"
                    data-map-legend-attachment="{{ antenne.map.legendAttachment }}"
                    data-map-point-latitude="{{ antenne.map.firstCity.position.latitude }}"
                    data-map-point-longitude="{{ antenne.map.firstCity.position.longitude }}"
                    {% if antenne.map.secondCity is not null %}
                    data-map-legend-second-city-first-point-x="{{ antenne.map.secondCity.firstPoint.x }}"
                    data-map-legend-second-city-first-point-y="{{ antenne.map.secondCity.firstPoint.y }}"
                    data-map-legend-second-city-second-point-x="{{ antenne.map.secondCity.secondPoint.x }}"
                    data-map-legend-second-city-second-point-y="{{ antenne.map.secondCity.secondPoint.y }}"
                    data-map-legend-second-city-third-point-x="{{ antenne.map.secondCity.thirdPoint.x }}"
                    data-map-legend-second-city-third-point-y="{{ antenne.map.secondCity.thirdPoint.y }}"
                    data-map-second-city-point-latitude="{{ antenne.map.secondCity.position.latitude }}"
                    data-map-second-city-point-longitude="{{ antenne.map.secondCity.position.longitude }}"
                    {% endif %}
                 {% endif %}
                 {% if antenne.departements is defined %}
                    data-departements="{{ antenne.departements|join(',') }}"
                 {% endif %}
                 {% if antenne.pays is defined %}
                    data-pays="{{ antenne.pays|join(',') }}"
                 {% endif %}
                 {% if antenne.map.useSecondColor %}
                    data-use-second-color="1"
                 {% endif %}
            >
               <div class="container">
                    <div class="col-md-2">
                        <img src="{{ antenne.logoUrl }}" alt="" />
                    </div>
                    <div class="col-md-10">
                        <h3>{{ antenne.label }}</h3>
                    </div>
                </div>
                <div class="container">
                    <div class="row">
                        {% if antenne.socials.blog is not null %}
                            <a class="button-inverted" href="{{ antenne.socials.blog }}">
                                <i class="fa fa-rss" aria-hidden="true"></i>&nbsp;Blog
                            </a>
                        {% endif %}
                
                        {% if antenne.socials.twitter is not null %}
                            <a class="button-inverted" href="https://twitter.com/{{ antenne.socials.twitter }}">
                                <i class="fa fa-twitter" aria-hidden="true"></i>&nbsp;Twitter
                            </a>
                        {% endif %}

                        {% if antenne.socials.linkedin is not null %}
                            <a class="button-inverted" href="https://www.linkedin.com/company/{{ antenne.socials.linkedin }}">
                                <i class="fa fa-linkedin" aria-hidden="true"></i>&nbsp;LinkedIn
                            </a>
                        {% endif %}

                        {% if antenne.socials.bluesky is not null %}
                            <a class="button-inverted" href="https://bsky.app/profile/{{ antenne.socials.bluesky }}">
                                <svg style="height:15px; fill:#415e96;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!--!Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M111.8 62.2C170.2 105.9 233 194.7 256 242.4c23-47.6 85.8-136.4 144.2-180.2c42.1-31.6 110.3-56 110.3 21.8c0 15.5-8.9 130.5-14.1 149.2C478.2 298 412 314.6 353.1 304.5c102.9 17.5 129.1 75.5 72.5 133.5c-107.4 110.2-154.3-27.6-166.3-62.9l0 0c-1.7-4.9-2.6-7.8-3.3-7.8s-1.6 3-3.3 7.8l0 0c-12 35.3-59 173.1-166.3 62.9c-56.5-58-30.4-116 72.5-133.5C100 314.6 33.8 298 15.7 233.1C10.4 214.4 1.5 99.4 1.5 83.9c0-77.8 68.2-53.4 110.3-21.8z"/></svg> Bluesky
                            </a>
                        {% endif %}

                        {% if antenne.meetup is not null %}
                            <a class="button-inverted" href="https://www.meetup.com/fr-FR/{{ antenne.meetup.urlName }}">
                                <i class="fa fa-meetup" aria-hidden="true"></i>&nbsp;Meetup
                            </a>
                        {% endif %}

                        {% if antenne.socials.youtube is not null %}
                            <a class="button-inverted" href="{{ antenne.socials.youtube }}">
                                <i class="fa fa-youtube" aria-hidden="true"></i>&nbsp;Youtube
                            </a>
                        {% endif %}
                    </div>
                </div>
            </div>
            {% if loop.index is even %}
                </div>
                <div class="container">
            {% endif %}
        {% endfor %}
        </div>
    </div>
</div>
</div>
{% endblock %}
